@import 'bourbon/bourbon';
@import 'base/base';
@import 'neat/neat';
@import 'refillsVariables';
@import 'myVariables';

body {
    background: $bodyColor;
}
header {
    @include outer-container;
    h1 {
        font-size: 2.25em;
        @include media($mobile) {
            font-size: 1.5em;
        }
        @include media($gtTabletP) {
            font-size: 3em;
        }
        text-align: center;
    }
    nav {
        font-size: 1.25em;
        @include media($mobile) {
            font-size: 1em;
        }
        background: $navColor;
        text-align: center;
        @include span-columns(3);
        @include shift(4);
    }
}
main {
    font-family: $helvetica;
    color: $mainTextColor;
    ul {
        list-style: none;
        li {
            background: $listColor;
        }
    }
}
.modal {
    label {
        cursor: pointer;
        margin-bottom: 0;
    }
    label img {
        border-radius: $modal-trigger-image-width / 2;
        display: block;
        max-width: $modal-trigger-image-width;
    }
    .modal-state {
        display: none;
    }
    .modal-trigger {
        padding: 0.8em 1em;
    }
    .modal-fade-screen { 
        // overlay
        @include transition(opacity 0.25s ease);
        @include position(fixed, 0);
        background-color: rgba(#000, 0.85);
        opacity: 0;
        padding-top: 0.6em;
        text-align: left;
        visibility: hidden;
        z-index: 99999999999;
        @include media($large-screen) {
            padding-top: 10em;
        }
        .modal-bg {
            @include position(absolute, 0);
            cursor: pointer;
        }
    }
    .modal-close {
        @include position(absolute, ($modal-padding /2) ($modal-padding /2) null null);
        @include size(1.5em);
        background: $modal-background;
        cursor: pointer;
        &:after, &:before {
            @include position(absolute,  em(3) em(3) 0 50%);
            @include transform(rotate(45deg));
            @include size(0.15em 1.5em);
            background: $modal-close-color;
            content: '';
            display: block;
            margin: em(-3) 0 0 em(-1);
        }
        &:hover:after, &:hover:before {
            background: darken($modal-close-color, 10%);
        }
        &:before {
            @include transform(rotate(-45deg));
        }
    }
    .modal-inner {
        @include transition(opacity 0.25s ease);
        background: $modal-background;
        border-radius: $base-border-radius;
        margin-top: 0;
        margin: auto;
        max-height: 95%;
        overflow: auto;
        padding: $modal-padding / 2;
        position: relative;
        width: 95%;
        @include media($medium-screen) {
            max-height: 70%;
            padding: $modal-padding;
            width: 60%;
        }
        @include media($large-screen) {
            width: 50%;
        }
        h1 {
            color: $base-font-color;
            text-align: left;
            text-transform: capitalize;
        }
        p {
            color: $base-font-color;
            line-height: $base-line-height;
        }
        .modal-intro {
            margin-bottom: 1em;
        }
        .modal-content {
            color: $base-font-color;
            @include media($medium-screen) {
                @include columns(2 8em);
            }
        }
        a.cta {
            color: $base-background-color;
            display: inline-block;
            margin-right: 0.5em;
            margin-top: 1em;
            &:last-child {
                padding: 0 2em;
            }
        }
    }
    .modal-state:checked + .modal-fade-screen {
        opacity: 1;
        visibility: visible;
    }
    .modal-state:checked + .modal-fade-screen .modal-inner {
        top: 0.5em;
    }
}
.modal-open {
    overflow: hidden;
}
// Based on code by Kasper Mikiewicz